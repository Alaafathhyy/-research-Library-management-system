#include "List.h"
#include "Controller.h"
List::List() {
head = NULL;
counter = 0;
}
void List::insert(infolist r) {
Node1 *temp = new Node1;
temp->y = r;
temp->next = NULL;
if (head == NULL) {
head = temp;
counter++;
return;
}
Node1 *curr = head;
while (curr->next != NULL) {
curr = curr->next;
}
curr->next = temp;
counter++;
}
int List::size() { return counter; }
void List::Print() // Print list elements
{
cout<<endl;
cout << "List: ";
Node1 *cur = head;
while (cur != 0) {
cout << cur->y.NumberOfCopiess << " " << cur->y.BookName << " " << cur-
>y.ISBN;
cout << endl;
a.printQ(cur->y.q);
cout<<"//////////////////////////"<<endl;
cur = cur->next;
}
cout << endl;
}
void List::Find1(string b) // Return first node containing d
{
if (head == 0)
return;
Node1 *cur = head;
while (cur != 0) {
if (cur->y.BookName == b) {
cur->y.q = a.borrow(cur->y.q);
cur->y.NumberOfBorrowedBooks++;
break;
}
cur = cur->next;
} return;
}
void List::Find2(string b) // Return first node containing d
{
if (head == NULL)
return;
Node1 *cur = head;
while (cur != 0) {
if (cur->y.BookName == b) {
cur->y.q = a.returnBook(cur->y.q);
cur->y.NumberOfBorrowedBooks--;
break;
}
cur = cur->next;
}
return;}
void List::Find3() // Return first node containing d
{
cout<<"this is the inventory of the library "<<endl;
if (head == NULL)
return;
Node1 *cur = head;
while (cur != 0) {
cout << "Number of copies = " <<cur->y.BookName<<" = "<< cur-
>y.NumberOfCopiess << endl;
cout << "Borrowed copies " << cur->y.NumberOfBorrowedBooks << endl;
cout << "Available Copies " << cur->y.NumberOfCopiess - cur-
>y.NumberOfBorrowedBooks << endl;
cout<<"////////////"<<endl;
cur = cur->next;
}
return;
}
